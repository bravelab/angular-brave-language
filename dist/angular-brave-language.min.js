!function(){"use strict";angular.module("ngBraveLanguage",[]).value("version","0.0.8")}(),function(){"use strict";angular.module("ngBraveLanguage").directive("languageSelector",function(n){return{restrict:"EA",replace:!0,templateUrl:function(){return n.templates.directives.languageSelector},scope:!0}})}(),function(){"use strict";angular.module("ngBraveLanguage").constant("languageConfig",{apiUrl:"/api",templates:{directives:{languageSelector:"bower_components/angular-brave-language/src/language/language-selector.tpl.html"}}})}(),function(){"use strict";angular.module("ngBraveLanguage").controller("LanguagesCtrl",function(n,a,e,u,g,r,t,l,c){function o(n){return n.data}e.lang={},t.getLanguages(function(n){var g=o(n);angular.isUndefined(u.currentLanguage)?angular.forEach(g,function(n){n.key===a.use()&&(e.currentLanguage=n)}):e.currentLanguage=u.currentLanguage,e.languages=g}),n.selectLanguage=function(n){var a=!1;angular.forEach(l.i18n.availableLanguageKeys,function(e,u){e===n.key?a=!0:null}),a?(u.currentLanguage=n,window.location.reload(!0)):c.warning("Translation not avaliable!")},e.getWord=function(n){return angular.isDefined(e.lang[n])?e.lang[n]:n}})}(),function(){"use strict";angular.module("ngBraveLanguage").factory("Language",function(n,a,e){function u(u){n.get(e.apiUrl+"/languages").success(function(n){u(n)}).error(function(){a.log("Error"),u([])})}return{getLanguages:function(n){u(n)}}})}();