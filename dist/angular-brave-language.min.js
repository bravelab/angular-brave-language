!function(){"use strict";angular.module("ngBraveLanguage",[]).value("version","0.0.2")}(),function(){"use strict";angular.module("ngBraveLanguage").directive("languageSelector",function(n){return{restrict:"EA",replace:!0,templateUrl:function(){return n.templates.directives.languageSelector},scope:!0}})}(),function(){"use strict";angular.module("ngBraveLanguage").constant("languageConfig",{apiUrl:"/api",templates:{directives:{languageSelector:"bower_components/angular-brave-language/src/language/language-selector.tpl.html"}}})}(),function(){"use strict";angular.module("ngBraveLanguage").controller("LanguagesCtrl",function(n,e,a,g,u,t,r){a.lang={},r.getLanguages(function(n){angular.isUndefined(g.currentLanguage)?angular.forEach(n,function(n){n.key===e.use()&&(a.currentLanguage=n)}):a.currentLanguage=g.currentLanguage,a.languages=n,r.getLang(n[0].key,function(n){a.lang=n})}),n.selectLanguage=function(n){g.currentLanguage=n,r.getLang(n.key,function(n){a.lang=n}),window.location.reload(!0)},a.getWord=function(n){return angular.isDefined(a.lang[n])?a.lang[n]:n}})}(),function(){"use strict";angular.module("ngBraveLanguage").factory("Language",function(n,e,a){function g(g,u){n.get(a.apiUrl+"/languages/"+g).success(function(n){u(n)}).error(function(){e.log("Error"),u([])})}function u(g){n.get(a.apiUrl+"/languages").success(function(n){g(n)}).error(function(){e.log("Error"),g([])})}return{getLang:function(n,e){g(n,e)},getLanguages:function(n){u(n)}}})}();