!function(){"use strict";angular.module("ngBraveLanguage",[]).value("version","0.0.4")}(),function(){"use strict";angular.module("ngBraveLanguage").directive("languageSelector",function(n){return{restrict:"EA",replace:!0,templateUrl:function(){return n.templates.directives.languageSelector},scope:!0}})}(),function(){"use strict";angular.module("ngBraveLanguage").constant("languageConfig",{apiUrl:"/api",templates:{directives:{languageSelector:"bower_components/angular-brave-language/src/language/language-selector.tpl.html"}}})}(),function(){"use strict";angular.module("ngBraveLanguage").controller("LanguagesCtrl",function(n,a,e,g,u,r,t,l,o){e.lang={},t.getLanguages(function(n){angular.isUndefined(g.currentLanguage)?angular.forEach(n,function(n){n.key===a.use()&&(e.currentLanguage=n)}):e.currentLanguage=g.currentLanguage,e.languages=n,t.getLang(n[0].key,function(n){e.lang=n})}),n.selectLanguage=function(n){var a=!1;angular.forEach(l.i18n.availableLanguageKeys,function(e,g){e===n.key?a=!0:null}),a?(g.currentLanguage=n,window.location.reload(!0)):o.warning("Translation not avaliable!")},e.getWord=function(n){return angular.isDefined(e.lang[n])?e.lang[n]:n}})}(),function(){"use strict";angular.module("ngBraveLanguage").factory("Language",function(n,a,e){function g(g,u){n.get(e.apiUrl+"/languages/"+g).success(function(n){u(n)}).error(function(){a.log("Error"),u([])})}function u(g){n.get(e.apiUrl+"/languages").success(function(n){g(n)}).error(function(){a.log("Error"),g([])})}return{getLang:function(n,a){g(n,a)},getLanguages:function(n){u(n)}}})}();