!function(){"use strict";angular.module("ngBraveLanguage",[]).value("version","0.0.9")}(),function(){"use strict";angular.module("ngBraveLanguage").directive("languageSelector",function(a,n){return{restrict:"EA",replace:!0,templateUrl:function(){return a.templates.directives.languageSelector},scope:!0}})}(),function(){"use strict";angular.module("ngBraveLanguage").constant("languageConfig",{apiUrl:"/api",templates:{directives:{languageSelector:"bower_components/angular-brave-language/src/language/language-selector.tpl.html"}}})}(),function(){"use strict";angular.module("ngBraveLanguage").controller("LanguagesCtrl",function(a,n,e,u,g,r,t,l,c){function i(a){return a.data}function o(a){angular.forEach(a,function(a){-1!==_.indexOf(n.getAvailableLanguageKeys(),a.key)&&e.availableLanguages.push(a)})}e.lang={},e.availableLanguages=[],t.getLanguages(function(a){var g=i(a);o(g),angular.isUndefined(u.currentLanguage)?angular.forEach(g,function(a){a.key===n.use()&&(e.currentLanguage=a)}):e.currentLanguage=u.currentLanguage,e.languages=g}),a.selectLanguage=function(a){var n=!1;angular.forEach(l.i18n.availableLanguageKeys,function(e,u){e===a.key?n=!0:null}),n?(u.currentLanguage=a,window.location.reload(!0)):c.warning("Translation not avaliable!")},e.getWord=function(a){return angular.isDefined(e.lang[a])?e.lang[a]:a}})}(),function(){"use strict";angular.module("ngBraveLanguage").factory("Language",function(a,n,e){function u(u){a.get(e.apiUrl+"/languages").success(function(a){u(a)}).error(function(){n.log("Error"),u([])})}return{getLanguages:function(a){u(a)}}})}();